package com.ers.internship.transaction;

import com.ers.internship.historization.HistorizedItem;
import java.util.logging.Logger;

/**
 *
 * @author Snejina Yanakieva
 */
public class Transaction extends HistorizedItem<String> {

    private static final Logger logger = Logger.getLogger(Transaction.class.getName());
    
    /**
     * The given name for the transaction
     */
    private String name;
    
    /**
     * The position volume generated by the transaction
     */
    private double volume;
    
    /**
     * The paid amount of the transaction
     */
    private double paidAmount;
    
    /**
     * The currency of the transaction
     */
    private String currency;
    
    /**
     * The sender of the transaction
     */
    private String sender;
    
    /**
     * The receiver of the transaction
     */
    private String receiver;
    
    /**
     * The ID of the position associated with the transaction
     */
    private String positionId;

    public Transaction() {
        super();
    }

    /**
     *
     * @param id the id of the transaction
     */
    public Transaction(String id) {
        super(id);
    }

    /**
     *
     * @return the name of the transaction
     */
    public String getName() {
        return name;
    }

    /**
     * Sets the name of the transaction to the specified one
     *
     * @param name the name of the transaction
     */
    public void setName(String name) {
        this.name = name;
    }

    /**
     *
     * @return the volume generated by the transaction
     */
    public double getVolume() {
        return volume;
    }

    /**
     * Sets the volume generated by the transaction to the specified one
     *
     * @param volume the volume generated by the transaction
     */
    public void setVolume(double volume) {
        this.volume = volume;
    }

    /**
     *
     * @return the paid amount for the transaction
     */
    public double getPaidAmount() {
        return paidAmount;
    }

    /**
     * Sets the paid amount of the transaction
     *
     * @param paidAmount the paid amount of the transaction
     */
    public void setPaidAmount(double paidAmount) {
        this.paidAmount = paidAmount;
    }

    /**
     *
     * @return the currency of the transaction
     */
    public String getCurrency() {
        return currency;
    }

    /**
     * Sets the currency of the transaction to the specified one
     *
     * @param currency the currency of the transaction
     */
    public void setCurrency(String currency) {
        this.currency = currency;
    }

    /**
     *
     * @return the sender of the transaction
     */
    public String getSender() {
        return sender;
    }

    /**
     * Sets the transaction's sender to the specified one
     *
     * @param sender the transaction's sender
     */
    public void setSender(String sender) {
        this.sender = sender;
    }

    /**
     *
     * @return the transaction's receiver
     */
    public String getReceiver() {
        return receiver;
    }

    /**
     * Sets the transaction's receiver to the specified one
     *
     * @param receiver the transaction's receiver
     */
    public void setReceiver(String receiver) {
        this.receiver = receiver;
    }

    /**
     *
     * @return the ID of the position associated with the transaction
     */
    public String getPositionId() {
        return positionId;
    }

    /**
     * Sets the ID of the position associated with the transaction to the specified one
     *
     * @param positionId the ID of the transaction's position
     */
    public void setPositionId(String positionId) {
        this.positionId = positionId;
    }

}
